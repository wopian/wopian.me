name: CI

on: [push, pull_request]

env:
  FORCE_COLOR: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    steps:
    - uses: actions/checkout@v5

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v6
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get Yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Use Yarn cache
      uses: actions/cache@v4
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      run: yarn install --prefer-offline --frozen-lockfile

    - name: Build SPA
      run: yarn build

    - name: Get commit revision
      if: ${{ github.event_name =='push' && github.ref == 'refs/heads/master' }}
      id: revision
      run: echo "::set-output name=rev::$(git rev-parse --short HEAD)"

    - name: Deploy SPA
      uses: JamesIves/github-pages-deploy-action@v4.7.3
      if: ${{ github.event_name =='push' && github.ref == 'refs/heads/master' }}
      with:
        branch: gh-pages
        folder: dist
        git-config-name: ${{ secrets.GH_USERNAME }}
        git-config-email: ${{ secrets.GH_EMAIL }}
        commit-message: "chore: deploy ${{ steps.revision.outputs.rev }}"
        clean: false
        single-commit: false
